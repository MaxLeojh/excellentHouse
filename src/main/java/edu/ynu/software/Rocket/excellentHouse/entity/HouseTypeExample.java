package edu.ynu.software.Rocket.excellentHouse.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HouseTypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public HouseTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPremisesIdIsNull() {
            addCriterion("premises_id is null");
            return (Criteria) this;
        }

        public Criteria andPremisesIdIsNotNull() {
            addCriterion("premises_id is not null");
            return (Criteria) this;
        }

        public Criteria andPremisesIdEqualTo(Integer value) {
            addCriterion("premises_id =", value, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdNotEqualTo(Integer value) {
            addCriterion("premises_id <>", value, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdGreaterThan(Integer value) {
            addCriterion("premises_id >", value, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("premises_id >=", value, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdLessThan(Integer value) {
            addCriterion("premises_id <", value, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdLessThanOrEqualTo(Integer value) {
            addCriterion("premises_id <=", value, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdIn(List<Integer> values) {
            addCriterion("premises_id in", values, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdNotIn(List<Integer> values) {
            addCriterion("premises_id not in", values, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdBetween(Integer value1, Integer value2) {
            addCriterion("premises_id between", value1, value2, "premisesId");
            return (Criteria) this;
        }

        public Criteria andPremisesIdNotBetween(Integer value1, Integer value2) {
            addCriterion("premises_id not between", value1, value2, "premisesId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("area is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("area is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(Integer value) {
            addCriterion("area =", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(Integer value) {
            addCriterion("area <>", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(Integer value) {
            addCriterion("area >", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("area >=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(Integer value) {
            addCriterion("area <", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(Integer value) {
            addCriterion("area <=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<Integer> values) {
            addCriterion("area in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<Integer> values) {
            addCriterion("area not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(Integer value1, Integer value2) {
            addCriterion("area between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("area not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAvepriceIsNull() {
            addCriterion("avePrice is null");
            return (Criteria) this;
        }

        public Criteria andAvepriceIsNotNull() {
            addCriterion("avePrice is not null");
            return (Criteria) this;
        }

        public Criteria andAvepriceEqualTo(BigDecimal value) {
            addCriterion("avePrice =", value, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceNotEqualTo(BigDecimal value) {
            addCriterion("avePrice <>", value, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceGreaterThan(BigDecimal value) {
            addCriterion("avePrice >", value, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("avePrice >=", value, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceLessThan(BigDecimal value) {
            addCriterion("avePrice <", value, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("avePrice <=", value, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceIn(List<BigDecimal> values) {
            addCriterion("avePrice in", values, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceNotIn(List<BigDecimal> values) {
            addCriterion("avePrice not in", values, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("avePrice between", value1, value2, "aveprice");
            return (Criteria) this;
        }

        public Criteria andAvepriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("avePrice not between", value1, value2, "aveprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceIsNull() {
            addCriterion("totalPrice is null");
            return (Criteria) this;
        }

        public Criteria andTotalpriceIsNotNull() {
            addCriterion("totalPrice is not null");
            return (Criteria) this;
        }

        public Criteria andTotalpriceEqualTo(BigDecimal value) {
            addCriterion("totalPrice =", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceNotEqualTo(BigDecimal value) {
            addCriterion("totalPrice <>", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceGreaterThan(BigDecimal value) {
            addCriterion("totalPrice >", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("totalPrice >=", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceLessThan(BigDecimal value) {
            addCriterion("totalPrice <", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("totalPrice <=", value, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceIn(List<BigDecimal> values) {
            addCriterion("totalPrice in", values, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceNotIn(List<BigDecimal> values) {
            addCriterion("totalPrice not in", values, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("totalPrice between", value1, value2, "totalprice");
            return (Criteria) this;
        }

        public Criteria andTotalpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("totalPrice not between", value1, value2, "totalprice");
            return (Criteria) this;
        }

        public Criteria andBedroomnumIsNull() {
            addCriterion("bedroomNum is null");
            return (Criteria) this;
        }

        public Criteria andBedroomnumIsNotNull() {
            addCriterion("bedroomNum is not null");
            return (Criteria) this;
        }

        public Criteria andBedroomnumEqualTo(Integer value) {
            addCriterion("bedroomNum =", value, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumNotEqualTo(Integer value) {
            addCriterion("bedroomNum <>", value, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumGreaterThan(Integer value) {
            addCriterion("bedroomNum >", value, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("bedroomNum >=", value, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumLessThan(Integer value) {
            addCriterion("bedroomNum <", value, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumLessThanOrEqualTo(Integer value) {
            addCriterion("bedroomNum <=", value, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumIn(List<Integer> values) {
            addCriterion("bedroomNum in", values, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumNotIn(List<Integer> values) {
            addCriterion("bedroomNum not in", values, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumBetween(Integer value1, Integer value2) {
            addCriterion("bedroomNum between", value1, value2, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andBedroomnumNotBetween(Integer value1, Integer value2) {
            addCriterion("bedroomNum not between", value1, value2, "bedroomnum");
            return (Criteria) this;
        }

        public Criteria andHallnumIsNull() {
            addCriterion("hallNum is null");
            return (Criteria) this;
        }

        public Criteria andHallnumIsNotNull() {
            addCriterion("hallNum is not null");
            return (Criteria) this;
        }

        public Criteria andHallnumEqualTo(Integer value) {
            addCriterion("hallNum =", value, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumNotEqualTo(Integer value) {
            addCriterion("hallNum <>", value, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumGreaterThan(Integer value) {
            addCriterion("hallNum >", value, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("hallNum >=", value, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumLessThan(Integer value) {
            addCriterion("hallNum <", value, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumLessThanOrEqualTo(Integer value) {
            addCriterion("hallNum <=", value, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumIn(List<Integer> values) {
            addCriterion("hallNum in", values, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumNotIn(List<Integer> values) {
            addCriterion("hallNum not in", values, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumBetween(Integer value1, Integer value2) {
            addCriterion("hallNum between", value1, value2, "hallnum");
            return (Criteria) this;
        }

        public Criteria andHallnumNotBetween(Integer value1, Integer value2) {
            addCriterion("hallNum not between", value1, value2, "hallnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumIsNull() {
            addCriterion("bathroomNum is null");
            return (Criteria) this;
        }

        public Criteria andBathroomnumIsNotNull() {
            addCriterion("bathroomNum is not null");
            return (Criteria) this;
        }

        public Criteria andBathroomnumEqualTo(Integer value) {
            addCriterion("bathroomNum =", value, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumNotEqualTo(Integer value) {
            addCriterion("bathroomNum <>", value, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumGreaterThan(Integer value) {
            addCriterion("bathroomNum >", value, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("bathroomNum >=", value, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumLessThan(Integer value) {
            addCriterion("bathroomNum <", value, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumLessThanOrEqualTo(Integer value) {
            addCriterion("bathroomNum <=", value, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumIn(List<Integer> values) {
            addCriterion("bathroomNum in", values, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumNotIn(List<Integer> values) {
            addCriterion("bathroomNum not in", values, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumBetween(Integer value1, Integer value2) {
            addCriterion("bathroomNum between", value1, value2, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andBathroomnumNotBetween(Integer value1, Integer value2) {
            addCriterion("bathroomNum not between", value1, value2, "bathroomnum");
            return (Criteria) this;
        }

        public Criteria andKitchennumIsNull() {
            addCriterion("kitchenNum is null");
            return (Criteria) this;
        }

        public Criteria andKitchennumIsNotNull() {
            addCriterion("kitchenNum is not null");
            return (Criteria) this;
        }

        public Criteria andKitchennumEqualTo(Integer value) {
            addCriterion("kitchenNum =", value, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumNotEqualTo(Integer value) {
            addCriterion("kitchenNum <>", value, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumGreaterThan(Integer value) {
            addCriterion("kitchenNum >", value, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumGreaterThanOrEqualTo(Integer value) {
            addCriterion("kitchenNum >=", value, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumLessThan(Integer value) {
            addCriterion("kitchenNum <", value, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumLessThanOrEqualTo(Integer value) {
            addCriterion("kitchenNum <=", value, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumIn(List<Integer> values) {
            addCriterion("kitchenNum in", values, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumNotIn(List<Integer> values) {
            addCriterion("kitchenNum not in", values, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumBetween(Integer value1, Integer value2) {
            addCriterion("kitchenNum between", value1, value2, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andKitchennumNotBetween(Integer value1, Integer value2) {
            addCriterion("kitchenNum not between", value1, value2, "kitchennum");
            return (Criteria) this;
        }

        public Criteria andIntroductionIsNull() {
            addCriterion("introduction is null");
            return (Criteria) this;
        }

        public Criteria andIntroductionIsNotNull() {
            addCriterion("introduction is not null");
            return (Criteria) this;
        }

        public Criteria andIntroductionEqualTo(String value) {
            addCriterion("introduction =", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotEqualTo(String value) {
            addCriterion("introduction <>", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionGreaterThan(String value) {
            addCriterion("introduction >", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionGreaterThanOrEqualTo(String value) {
            addCriterion("introduction >=", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLessThan(String value) {
            addCriterion("introduction <", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLessThanOrEqualTo(String value) {
            addCriterion("introduction <=", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionLike(String value) {
            addCriterion("introduction like", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotLike(String value) {
            addCriterion("introduction not like", value, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionIn(List<String> values) {
            addCriterion("introduction in", values, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotIn(List<String> values) {
            addCriterion("introduction not in", values, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionBetween(String value1, String value2) {
            addCriterion("introduction between", value1, value2, "introduction");
            return (Criteria) this;
        }

        public Criteria andIntroductionNotBetween(String value1, String value2) {
            addCriterion("introduction not between", value1, value2, "introduction");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andIsVaildIsNull() {
            addCriterion("is_vaild is null");
            return (Criteria) this;
        }

        public Criteria andIsVaildIsNotNull() {
            addCriterion("is_vaild is not null");
            return (Criteria) this;
        }

        public Criteria andIsVaildEqualTo(Boolean value) {
            addCriterion("is_vaild =", value, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildNotEqualTo(Boolean value) {
            addCriterion("is_vaild <>", value, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildGreaterThan(Boolean value) {
            addCriterion("is_vaild >", value, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_vaild >=", value, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildLessThan(Boolean value) {
            addCriterion("is_vaild <", value, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildLessThanOrEqualTo(Boolean value) {
            addCriterion("is_vaild <=", value, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildIn(List<Boolean> values) {
            addCriterion("is_vaild in", values, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildNotIn(List<Boolean> values) {
            addCriterion("is_vaild not in", values, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildBetween(Boolean value1, Boolean value2) {
            addCriterion("is_vaild between", value1, value2, "isVaild");
            return (Criteria) this;
        }

        public Criteria andIsVaildNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_vaild not between", value1, value2, "isVaild");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house_type
     *
     * @mbggenerated do_not_delete_during_merge Thu Sep 07 08:40:49 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house_type
     *
     * @mbggenerated Thu Sep 07 08:40:49 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}